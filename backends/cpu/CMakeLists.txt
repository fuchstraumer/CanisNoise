CMAKE_MINIMUM_REQUIRED(VERSION 3.3)
PROJECT(CANIS_CPU_BACKEND)

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

IF(NOT MSVC) 
    SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)
ENDIF()

FILE(GLOB COMBINERS "${CMAKE_CURRENT_SOURCE_DIR}/combiners/*.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/combiners/*.cpp")
FILE(GLOB MODIFIERS "${CMAKE_CURRENT_SOURCE_DIR}/modifiers/*.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/modifiers/*.cpp")
FILE(GLOB COMMON_NOISE_GEN "${CMAKE_CURRENT_SOURCE_DIR}/noisegen.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/noisegen.cpp"
                           "${CMAKE_CURRENT_SOURCE_DIR}/simplex_lut.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/simplex_lut.cpp")

SOURCE_GROUP("combiners" FILES ${COMBINERS})
SOURCE_GROUP("modifiers" FILES ${MODIFIERS})

ADD_LIBRARY(CANIS_CPU_BACKEND SHARED "${CMAKE_CURRENT_SOURCE_DIR}/cpu_include.hpp" ${COMBINERS} ${MODIFIERS} ${COMMON_NOISE_GEN})

TARGET_COMPILE_DEFINITIONS(CANIS_CPU_BACKEND PRIVATE -DBUILDING_DLL)
IF(MSVC) # MSVC refuses to use C++17 unless we set it manually
    TARGET_COMPILE_OPTIONS(CANIS_CPU_BACKEND PRIVATE "/std:c++17")
ENDIF()
TARGET_INCLUDE_DIRECTORIES(CANIS_CPU_BACKEND PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)

INSTALL(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/combiners" DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/cpu_backend/combiners")
INSTALL(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/modifiers" DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/cpu_backend/modifiers")
INSTALL(FILES ${COMMON_NOISE_GEN} DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/cpu_backend")
INSTALL(FILES "${CMAKE_CURRENT_SOURCE_DIR}/cpu_include.hpp" DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/cpu_backend")
INSTALL(TARGETS CANIS_CPU_BACKEND 
    LIBRARY DESTINATION "lib"
    ARCHIVE DESTINATION "lib"
    RUNTIME DESTINATION "bin"
    COMPONENT library)
CMAKE_MINIMUM_REQUIRED(VERSION 3.6)
PROJECT(CANIS_VK_BACKEND)

SET(CMAKE_INSTALL_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/ext/")
ADD_SUBDIRECTORY("../third_party/VulpesRender" "${CMAKE_CURRENT_SOURCE_DIR}/build/vpr" EXCLUDE_FROM_ALL)

FILE(GLOB COMBINERS "${CMAKE_CURRENT_SOURCE_DIR}/include/combiners/*.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/src/combiners/*.cpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/shaders/combiners/*.comp")
FILE(GLOB MODIFIERS "${CMAKE_CURRENT_SOURCE_DIR}/include/modifiers/*.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/src/modifiers/*.cpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/shaders/modifiers/*.comp")
FILE(GLOB GENERATORS "${CMAKE_CURRENT_SOURCE_DIR}/include/generators/*.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/src/generators/*.cpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/shaders/generators/*.comp")

SOURCE_GROUP("combiners" FILES ${COMBINERS})
SOURCE_GROUP("modifiers" FILES ${MODIFIERS})
SOURCE_GROUP("generators" FILES ${GENERATORS})

FIND_PACKAGE(Vulkan REQUIRED QUIET)

ADD_LIBRARY(CANIS_VK_BACKEND SHARED ${COMBINERS} ${MODIFIERS} ${GENERATORS})
TARGET_INCLUDE_DIRECTORIES(CANIS_VK_BACKEND PRIVATE ${Vulkan_INCLUDE_DIRS} "${CMAKE_CURRENT_SOURCE_DIR}/include" "../common/"
    "${CMAKE_CURRENT_SOURCE_DIR}/ext/include")
TARGET_LINK_LIBRARIES(CANIS_VK_BACKEND PRIVATE VulpesRender)

TARGET_COMPILE_DEFINITIONS(CANIS_VK_BACKEND PRIVATE -DBUILDING_DLL)
IF(MSVC) # MSVC refuses to use C++17 unless we set it manually
    TARGET_COMPILE_OPTIONS(CANIS_VK_BACKEND PRIVATE "/std:c++17" "/Gm")
ELSE()
    TARGET_COMPILE_OPTIONS(CANIS_VK_BACKEND PRIVATE "-std=c++17")
ENDIF()
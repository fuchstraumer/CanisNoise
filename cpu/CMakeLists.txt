CMAKE_MINIMUM_REQUIRED(VERSION 3.7 FATAL_ERROR)
PROJECT(CANIS_CPU_BACKEND)


IF(NOT MSVC) 
    SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)
ENDIF()

FILE(GLOB COMBINERS "${CMAKE_CURRENT_SOURCE_DIR}/include/combiners/*.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/src/combiners/*.cpp")
FILE(GLOB MODIFIERS "${CMAKE_CURRENT_SOURCE_DIR}/include/modifiers/*.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/src/modifiers/*.cpp")
FILE(GLOB GENERATORS "${CMAKE_CURRENT_SOURCE_DIR}/include/generators/*.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/src/generators/*.cpp")
FILE(GLOB COMMON_NOISE_GEN "${CMAKE_CURRENT_SOURCE_DIR}/include/noisegen.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/src/noisegen.cpp"
                           "${CMAKE_CURRENT_SOURCE_DIR}/include/simplex_lut.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/src/simplex_lut.cpp"
                           )

SOURCE_GROUP("combiners" FILES ${COMBINERS})
SOURCE_GROUP("modifiers" FILES ${MODIFIERS})
SOURCE_GROUP("generators" FILES ${GENERATORS})

ADD_LIBRARY(CANIS_CPU_BACKEND SHARED "${CMAKE_CURRENT_SOURCE_DIR}/include/cpu_include.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/include/std_includes.hpp" 
    ${GENERATORS} ${COMBINERS} ${MODIFIERS} ${COMMON_NOISE_GEN})

TARGET_COMPILE_DEFINITIONS(CANIS_CPU_BACKEND PRIVATE -DBUILDING_DLL)
IF(MSVC) # MSVC refuses to use C++17 unless we set it manually
    TARGET_COMPILE_OPTIONS(CANIS_CPU_BACKEND PRIVATE "/std:c++17")
ELSE()
    TARGET_COMPILE_OPTIONS(CANIS_CPU_BACKEND PRIVATE "-std=c++17")
ENDIF()
TARGET_INCLUDE_DIRECTORIES(CANIS_CPU_BACKEND PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/include")
TARGET_INCLUDE_DIRECTORIES(CANIS_CPU_BACKEND PRIVATE "../common")

INSTALL(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/include/" DESTINATION "include/cpu/")